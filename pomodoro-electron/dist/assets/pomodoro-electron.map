{"version":3,"sources":["vendor/ember-cli/app-prefix.js","pomodoro-electron/adapters/application.js","pomodoro-electron/app.js","pomodoro-electron/components/clock-comp.js","pomodoro-electron/components/color-option.js","pomodoro-electron/components/dropdown-list.js","pomodoro-electron/components/fa-icon.js","pomodoro-electron/components/fa-list.js","pomodoro-electron/components/fa-stack.js","pomodoro-electron/components/flip-clock.js","pomodoro-electron/components/info-card.js","pomodoro-electron/components/pop-dialog.js","pomodoro-electron/components/sidenav-list.js","pomodoro-electron/components/sidenav-panel.js","pomodoro-electron/components/tag-form.js","pomodoro-electron/components/task-form.js","pomodoro-electron/components/task-info.js","pomodoro-electron/components/tasks-sidenav.js","pomodoro-electron/controllers/application.js","pomodoro-electron/controllers/main.js","pomodoro-electron/controllers/testing.js","pomodoro-electron/electron/reload.js","pomodoro-electron/helpers/and.js","pomodoro-electron/helpers/app-version.js","pomodoro-electron/helpers/eq.js","pomodoro-electron/helpers/gt.js","pomodoro-electron/helpers/gte.js","pomodoro-electron/helpers/is-array.js","pomodoro-electron/helpers/is-equal.js","pomodoro-electron/helpers/lt.js","pomodoro-electron/helpers/lte.js","pomodoro-electron/helpers/not-eq.js","pomodoro-electron/helpers/not.js","pomodoro-electron/helpers/or.js","pomodoro-electron/helpers/pluralize.js","pomodoro-electron/helpers/pomodoro-hours.js","pomodoro-electron/helpers/route-action.js","pomodoro-electron/helpers/singularize.js","pomodoro-electron/helpers/xor.js","pomodoro-electron/initializers/app-version.js","pomodoro-electron/initializers/container-debug-adapter.js","pomodoro-electron/initializers/data-adapter.js","pomodoro-electron/initializers/ember-data.js","pomodoro-electron/initializers/export-application-global.js","pomodoro-electron/initializers/injectStore.js","pomodoro-electron/initializers/store.js","pomodoro-electron/initializers/transforms.js","pomodoro-electron/initializers/truth-helpers.js","pomodoro-electron/instance-initializers/ember-data.js","pomodoro-electron/models/color.js","pomodoro-electron/models/pomodoro.js","pomodoro-electron/models/tag.js","pomodoro-electron/models/task.js","pomodoro-electron/resolver.js","pomodoro-electron/router.js","pomodoro-electron/routes/application.js","pomodoro-electron/routes/configuration.js","pomodoro-electron/routes/data.js","pomodoro-electron/routes/main.js","pomodoro-electron/routes/schedule.js","pomodoro-electron/routes/statistics.js","pomodoro-electron/routes/testing.js","pomodoro-electron/services/ajax.js","pomodoro-electron/templates/application.js","pomodoro-electron/templates/components/clock-comp.js","pomodoro-electron/templates/components/color-option.js","pomodoro-electron/templates/components/dropdown-list.js","pomodoro-electron/templates/components/flip-clock.js","pomodoro-electron/templates/components/info-card.js","pomodoro-electron/templates/components/pop-dialog.js","pomodoro-electron/templates/components/sidenav-list.js","pomodoro-electron/templates/components/sidenav-panel.js","pomodoro-electron/templates/components/tag-form.js","pomodoro-electron/templates/components/task-form.js","pomodoro-electron/templates/components/task-info.js","pomodoro-electron/templates/components/tasks-sidenav.js","pomodoro-electron/templates/configuration.js","pomodoro-electron/templates/main.js","pomodoro-electron/templates/schedule.js","pomodoro-electron/templates/statistics.js","pomodoro-electron/templates/testing.js","pomodoro-electron/transforms/attachment.js","pomodoro-electron/transforms/attachments.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('pomodoro-electron/adapters/application', ['exports', 'pouchdb', 'ember-pouch'], function (exports, _pouchdb, _emberPouch) {\n\n     //var remote = new PouchDB('http://localhost:5984/my_couch');\n     var db = new _pouchdb['default']('local_pouch');\n\n     /*\n     db.sync(remote, {\n          live: true,   // do a live, ongoing sync\n          retry: true   // retry if the connection is lost\n     \n     });\n     */\n\n     exports['default'] = _emberPouch.Adapter.extend({\n          db: db\n     });\n});","define('pomodoro-electron/app', ['exports', 'ember', 'pomodoro-electron/resolver', 'ember-load-initializers', 'pomodoro-electron/config/environment'], function (exports, _ember, _pomodoroElectronResolver, _emberLoadInitializers, _pomodoroElectronConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _pomodoroElectronConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _pomodoroElectronConfigEnvironment['default'].podModulePrefix,\n    Resolver: _pomodoroElectronResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _pomodoroElectronConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('pomodoro-electron/components/clock-comp', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['clock-comp', 'column'],\n    active: false,\n    min: '00',\n    sec: '00',\n    didReceiveAttrs: function didReceiveAttrs() {\n      this.set('clock.reset', this.get('reset').bind(this));\n      this.setTime(this.get('clock.time'));\n    },\n    reset: function reset() {\n      if (this.get('timeInt')) {\n        clearInterval(this.get('timeInt'));\n        this.set('timeInt', null);\n        this.set('clock.state', 'paused');\n        this.set('active', false);\n        this.setTime(this.get('clock.time'));\n      }\n    },\n    start: function start() {\n      var _this = this;\n\n      if (!this.get('timeInt')) {\n        var timeInt = setInterval(function () {\n          _this.decreaseTime();\n        }, 1000);\n        this.set('timeInt', timeInt);\n        this.set('clock.pausedByUser', false);\n        this.set('active', true);\n        this.set('clock.state', 'running');\n      }\n    },\n    stop: function stop() {\n      clearInterval(this.get('timeInt'));\n      this.set('timeInt', null);\n      this.set('clock.state', 'paused');\n      if (this.get('stopCB')) {\n        this.get('stopCB')(this);\n      }\n    },\n    setTime: function setTime(time) {\n      if (time > 60) {\n        var min = Math.floor(time / 60);\n        this.setWithPad('min', min);\n        var sec = time % 60;\n        this.setWithPad('sec', sec);\n      } else {\n        this.setWithPad('sec', time);\n      }\n    },\n    setWithPad: function setWithPad(attr, val) {\n      if (val < 10) {\n        this.set(attr, '0' + val);\n      } else {\n        this.set(attr, val);\n      }\n    },\n\n    decreaseTime: function decreaseTime() {\n      var min = parseInt(this.get('min'));\n      var sec = parseInt(this.get('sec'));\n      sec = sec - 1;\n      if (sec < 0) {\n        min = min - 1;\n        if (min < 0) {\n          this.stop();\n        } else {\n          this.setWithPad('min', min);\n        }\n      } else {\n        this.setWithPad('sec', sec);\n      }\n    },\n    actions: {\n      playPause: function playPause() {\n        this.get('playPause')(this);\n      }\n    }\n  });\n});","define('pomodoro-electron/components/color-option', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['color-option'],\n    didReceiveAttrs: function didReceiveAttrs() {\n      var value = this.get('color.value');\n      this.set('style', _ember['default'].String.htmlSafe('background-color: ' + value));\n    }\n  });\n});","define('pomodoro-electron/components/dropdown-list', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['dropdown-list'],\n    classNameBindings: ['dropdownListShow'],\n    didReceiveAttrs: function didReceiveAttrs() {\n      var _this = this;\n\n      if (this.get('items')[0]) {\n        this.set('selectedItem', this.get('items')[0]);\n        this.set('selection', this.get('items').filter(function (item) {\n          return item.id !== _this.get('items')[0].id;\n        }));\n      }\n    },\n    actions: {\n      clickSelected: function clickSelected() {\n        this.toggleProperty('dropdownListShow');\n      },\n      selectItem: function selectItem(item) {\n        this.set('dropdownListShow', false);\n        this.set('selection', this.get('items').filter(function (val) {\n          return item.id !== val.id;\n        }));\n        this.set('selectedItem', item);\n        this.set('selected', item);\n      }\n    }\n\n  });\n});","define('pomodoro-electron/components/fa-icon', ['exports', 'ember-font-awesome/components/fa-icon'], function (exports, _emberFontAwesomeComponentsFaIcon) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaIcon['default'];\n    }\n  });\n});","define('pomodoro-electron/components/fa-list', ['exports', 'ember-font-awesome/components/fa-list'], function (exports, _emberFontAwesomeComponentsFaList) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaList['default'];\n    }\n  });\n});","define('pomodoro-electron/components/fa-stack', ['exports', 'ember-font-awesome/components/fa-stack'], function (exports, _emberFontAwesomeComponentsFaStack) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaStack['default'];\n    }\n  });\n});","define('pomodoro-electron/components/flip-clock', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['flip-clock'],\n    previousState: false,\n    didInsertElement: function didInsertElement() {\n      var flipClock = _ember['default'].$('.clock').FlipClock({\n        clockFace: 'MinuteCounter',\n        autoStart: false,\n        callbacks: {\n          stop: this.stopClock.bind(this)\n        }\n      });\n      this.set('flipClock', flipClock);\n      this.initialize();\n    },\n    initialize: function initialize() {\n      this.get('flipClock').setCountdown(true);\n      this.get('flipClock').setTime(this.get('clock.time'));\n    },\n    reset: function reset(sec) {\n      this.get('flipClock').setTime(sec);\n    },\n    pause: function pause() {\n      this.set('clock.state', 'paused');\n      this.get('flipClock').stop();\n    },\n    start: function start() {\n      this.set('clock.state', 'active');\n      this.get('flipClock').start();\n    },\n    stopClock: function stopClock() {\n      var _this = this;\n\n      _ember['default'].run.later(this, function () {\n        if (_this.get('clock.state') === 'paused') {\n          return;\n        }\n        if (_this.get('clock.mode') === 'pomodoro') {\n          _this.incrementProperty('intervalCount');\n          var interval = _this.get('intervalCount') % 3 === 0 ? _this.get('clock.longInterval') : _this.get('clock.shortInterval');\n          _this.get('flipClock').setTime(interval);\n          _this.set('clock.mode', 'interval');\n        } else if (_this.get('clock.mode') === 'interval') {\n          _this.get('flipClock').setTime(_this.get('clock.time'));\n          _this.set('clock.mode', 'pomodoro');\n        }\n        _ember['default'].run.later(_this, function () {\n          _this.start();\n        }, 1000);\n      }, 1000);\n    },\n    actions: {\n      playPause: function playPause() {\n        this.get('active') ? this.pause() : this.start();\n        this.toggleProperty('active');\n      }\n    }\n  });\n});","define('pomodoro-electron/components/info-card', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['info-card']\n  });\n});","define('pomodoro-electron/components/pop-dialog', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['pop-dialog'],\n    classNameBindings: ['showDialog'],\n    showDialog: true,\n    actions: {\n      close: function close(val) {\n        this.set('showDialog', false);\n        this.get('confirm')(val);\n      }\n    }\n  });\n});","define('pomodoro-electron/components/sidenav-list', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    inactive: false,\n    classNames: ['sidenav-list'],\n    newTag: { name: null, description: null,\n      color: null },\n    newTask: { name: null, description: null, tag: null,\n      pomodoros: [] },\n    loadList: function loadList() {\n      var list = this.get('model.' + this.get('listMode'));\n      list.setEach('active', true);\n      this.set('filteredList', list.filterBy('active', !this.get('inactive')));\n    },\n    didReceiveAttrs: function didReceiveAttrs() {\n      this.loadList();\n      this.get('register')().set('sidenavList', this);\n    },\n    loading: false,\n    setLeftPanelModel: function setLeftPanelModel(item) {\n      if (this.get('listMode') === 'tasks') {\n        this.set('mode.model', item.name ? item : this.get('newTask'));\n        this.set('mode.saveAction', item.name ? 'editTask' : 'createTask');\n      } else {\n        this.set('mode.model', item.name ? item : this.get('newTag'));\n        this.set('mode.saveAction', item.name ? 'editTag' : 'createTag');\n      }\n    },\n    actions: {\n      toggleInactive: function toggleInactive() {\n        this.toggleProperty('inactive');\n        this.loadList();\n      },\n      searchList: function searchList() {\n        var _this = this;\n\n        this.set('loading', true);\n        _ember['default'].run.later(this, function () {\n          var regex = new RegExp(_this.get('search'), 'i');\n          var model = _this.get('model.' + _this.get('listMode'));\n          console.log('model', model);\n          var result = model.filter(function (item) {\n            return item.name.match(regex);\n          });\n          _this.set('filteredList', result);\n          _this.set('loading', false);\n        }, 500);\n      },\n      toggle: function toggle(item, event) {\n        var el = _ember['default'].$(event.target).closest(\"li\");\n        el.addClass('active');\n        if (this.get('prevItem')) {\n          this.get('prevItem').removeClass('active');\n        }\n        this.set('prevItem', el);\n        if (this.get('listMode') === 'tasks') {\n          this.set('model.state.selectedTask', item);\n        }\n        this.get('changeSelected')(item, this.get('listMode'));\n        this.setLeftPanelModel(item);\n      },\n      showLeftPanel: function showLeftPanel(item) {\n        this.setLeftPanelModel(item);\n        this.set('showLeftPanel', true);\n      },\n      changeListMode: function changeListMode(mode) {\n        this.set('listMode', mode);\n      }\n    }\n  });\n});","define('pomodoro-electron/components/sidenav-panel', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNameBindings: ['openSidenav', 'leftPanel'],\n    listMode: 'tasks',\n    mode: { model: '', saveAction: 'createTask' },\n    reloadList: function reloadList() {\n      this.get('sidenavList').reloadList();\n    },\n    actions: {\n      register: function register() {\n        return this;\n      },\n      overlayClick: function overlayClick() {\n        this.set('leftPanel', false);\n        this.set('openSidenav', false);\n      },\n      showLeftPanel: function showLeftPanel() {\n        this.toggleProperty('leftPanel');\n      }\n    }\n  });\n});","define('pomodoro-electron/components/tag-form', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['tag-form', 'column'],\n    didInsertElement: function didInsertElement() {\n      this.set('msgs', []);\n    },\n    didReceiveAttrs: function didReceiveAttrs() {\n      if (this.get('tag.name')) {\n        this.set('mode', 'edit');\n      } else {\n        this.set('mode', 'create');\n      }\n      this.set('sidenavPanel', this.get('register')());\n      this.get('sidenavPanel').set('tagForm', this);\n    },\n    title: 'new tag',\n    tag: { name: '', description: '',\n      color: '' },\n    actions: {\n      saveTag: function saveTag(tag) {\n        var _this = this;\n\n        this.get('saveTag')(tag).then(function () {\n          _this.set('msgs', ['tag saved!']);\n          _ember['default'].run.later(_this, function () {\n            _this.set('msgs', []);\n          }, 5000);\n        })['catch'](function () {\n          _this.set('msgs', ['an error occored!']);\n          _ember['default'].run.later(_this, function () {\n            _this.set('msgs', []);\n          }, 5000);\n        });\n      },\n      completeTag: function completeTag(tag) {\n        var _this2 = this;\n\n        this.get('completeTag')(tag).then(function () {\n          _this2.get('sidenavPanel').reloadList();\n          _this2.set('msgs', ['tag completed!']);\n          _ember['default'].run.later(_this2, function () {\n            _this2.set('msgs', []);\n          }, 5000);\n        })['catch'](function (error) {\n          _this2.set('msgs', ['error: ' + error]);\n          _ember['default'].run.later(_this2, function () {\n            _this2.set('msgs', []);\n          }, 5000);\n        });\n      }\n    }\n  });\n});","define('pomodoro-electron/components/task-form', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['task-form', 'column'],\n    didInsertElement: function didInsertElement() {\n      this.set('msgs', []);\n    },\n    didReceiveAttrs: function didReceiveAttrs() {\n      if (this.get('task.name')) {\n        this.set('mode', 'edit');\n      } else {\n        this.set('mode', 'create');\n      }\n      this.set('sidenavPanel', this.get('register')());\n      this.get('sidenavPanel').set('taskForm', this);\n    },\n    actions: {\n      saveTask: function saveTask(task) {\n        var _this = this;\n\n        this.get('saveTask')(task).then(function () {\n          _this.set('msgs', ['task saved!']);\n          _ember['default'].run.later(_this, function () {\n            _this.set('msgs', []);\n          }, 5000);\n        })['catch'](function () {\n          _this.set('msgs', ['an error occored!']);\n          _ember['default'].run.later(_this, function () {\n            _this.set('msgs', []);\n          }, 5000);\n        });\n      },\n      completeTask: function completeTask(task) {\n        var _this2 = this;\n\n        this.get('completeTask')(task).then(function () {\n          _this2.get('sidenavPanel').reloadList();\n          _this2.set('msgs', ['task completed!']);\n          _ember['default'].run.later(_this2, function () {\n            _this2.set('msgs', []);\n          }, 5000);\n        })['catch'](function (error) {\n          _this2.set('msgs', ['error: ' + error]);\n          _ember['default'].run.later(_this2, function () {\n            _this2.set('msgs', []);\n          }, 5000);\n        });\n      }\n    }\n  });\n});","define('pomodoro-electron/components/task-info', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['task-info', 'column']\n  });\n});","define('pomodoro-electron/components/tasks-sidenav', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['sidenav-panel'],\n    didInsertElement: function didInsertElement() {\n      this.set('filteredTasks', this.get('model.tasks'));\n    },\n    loading: false,\n    searchResults: _ember['default'].observer('search', function () {\n      var _this = this;\n\n      this.set('loading', true);\n      _ember['default'].run.later(this, function () {\n        var regex = new RegExp(_this.get('search'), 'i');\n        var result = _this.get('model.tasks').filter(function (item) {\n          return item.name.match(regex);\n        });\n        _this.set('filteredTasks', result);\n        _this.set('loading', false);\n      }, 500);\n    }),\n    actions: {\n      toggle: function toggle(task, event) {\n        var el = _ember['default'].$(event.target).closest(\"li\");\n        el.addClass('active');\n        if (this.get('prevItem')) {\n          this.get('prevItem').removeClass('active');\n        }\n        this.set('prevItem', el);\n        this.set('model.state.selectedTask', task);\n      },\n      showEditTask: function showEditTask(task) {\n        this.get('showEditTask')(task);\n      },\n      showCreateTask: function showCreateTask() {\n        this.get('showCreateTask')();\n      },\n      showCreateTag: function showCreateTag() {\n        this.get('showCreateTag')();\n      }\n    }\n  });\n});","define('pomodoro-electron/controllers/application', ['exports', 'ember'], function (exports, _ember) {\n\n  var links = [{ icon: 'clock-o',\n    name: 'schedule', link: 'schedule' }, { icon: 'bar-chart',\n    name: 'statistics',\n    link: 'statistics' }, { icon: 'cog',\n    name: 'configuration', link: 'configuration' }];\n\n  exports['default'] = _ember['default'].Controller.extend({\n    openSidenav: false,\n    links: links\n  });\n});","define('pomodoro-electron/controllers/main', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n    actions: {\n      stopClock: function stopClock(clock) {\n        console.log(clock.get('clock.pausedByUser'));\n        if (clock.get('clock.pausedByUser')) {\n          return;\n        }\n        clock.incrementProperty('clock.streak');\n        var model = this.get(\"model\");\n        if (clock.get('clock.mode') === 'pomodoro') {\n          // TODO save the task\n          if (this.get('clock.streak') % 3 === 0) {\n            clock.setTime(this.get('clock.longInterval'));\n          } else {\n            clock.setTime(this.get('clock.shortInterval'));\n          }\n          clock.set('clock.mode', 'iterval');\n        } else {\n          clock.setTime(this.get('clock.time'));\n          clock.set('clock.mode', 'pomodoro');\n        }\n        clock.start();\n      },\n      playPause: function playPause(clock) {\n        if (!this.get('model.state.selectedTask')) {\n          console.log('first you need to select a task!');\n          return;\n        }\n        if (clock.get('active')) {\n          clock.set('clock.pausedByUser', true);\n          clock.stop();\n        } else {\n          clock.start();\n        }\n        clock.toggleProperty('active');\n      }\n    }\n  });\n});","define('pomodoro-electron/controllers/testing', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n    colors: [{ id: 1, name: 'pink', value: '#ff00ff' }, { id: 2, name: 'red', value: '#ff0000' }],\n    actions: {\n      confirm: function confirm(val) {\n        console.log(val);\n      },\n      showDialog: function showDialog() {\n        this.set('dialogCB', function () {\n          console.log('dialog callback!');\n        });\n        this.toggleProperty('showDialog');\n      }\n    }\n  });\n});","define('pomodoro-electron/electron/reload', ['exports'], function (exports) {\n  function setupLivereload() {\n    var process = window ? window.process : null;\n\n    // Exit immediately if we're not running in Electron\n    if (!window.ELECTRON || process && process.env && process.env.DO_NOT_SETUP_LIVERELOAD) {\n      return;\n    }\n\n    // Reload the page when anything in `dist` changes\n    var fs = undefined;\n    var path = undefined;\n    var devtron = undefined;\n\n    try {\n      fs = window.requireNode('fs');\n      path = window.requireNode('path');\n    } catch (e) {\n      console.warn('ember-electron tried to require fs and path to enable live-reload features, but failed.');\n      console.warn('Automatic reloading is therefore disabled.');\n      console.warn(e);\n\n      return;\n    }\n\n    /**\n     * @private\n     * Watch a given directory for changes and reload\n     * on change\n     *\n     * @param sub directory\n     */\n    function watch() {\n      var _path;\n\n      for (var _len = arguments.length, sub = Array(_len), _key = 0; _key < _len; _key++) {\n        sub[_key] = arguments[_key];\n      }\n\n      var dirname = (_path = path).join.apply(_path, [__dirname].concat(sub));\n\n      fs.watch(dirname, { recursive: true }, function () {\n        return window.location.reload();\n      });\n    }\n\n    /**\n     * @private\n     * Install Devtron in the current window.\n     */\n    function installDevtron() {\n      try {\n        devtron = window.requireNode('devtron');\n\n        if (devtron) {\n          devtron.install();\n        }\n      } catch (e) {\n        // no-op\n      }\n    }\n\n    /**\n     * @private\n     * Install Ember-Inspector in the current window.\n     */\n    function installEmberInspector() {\n      var location = undefined;\n\n      try {\n        var eiLocation = window.requireNode.resolve('ember-inspector');\n        location = path.join(eiLocation, 'dist', 'chrome');\n      } catch (error) {\n        location = path.join(__dirname, '..', 'node_modules', 'ember-inspector', 'dist', 'chrome');\n      }\n\n      fs.lstat(location, function (err, results) {\n        if (err) {\n          console.warn('Error loading Ember Inspector', err);\n\n          return;\n        }\n\n        if (results && results.isDirectory && results.isDirectory()) {\n          var BrowserWindow = window.requireNode('electron').remote.BrowserWindow;\n\n          var added = BrowserWindow.getDevToolsExtensions && BrowserWindow.getDevToolsExtensions().hasOwnProperty('Ember Inspector');\n\n          try {\n            if (!added) {\n              BrowserWindow.addDevToolsExtension(location);\n            }\n          } catch (err) {\n            // no-op\n          }\n        }\n      });\n    }\n\n    document.addEventListener('DOMContentLoaded', function () /* e */{\n      var dirname = __dirname || (process && (process || {}).cwd ? process.cwd() : null);\n\n      if (!dirname) {\n        return;\n      }\n\n      fs.stat(dirname, function (err /* , stat */) {\n        if (!err) {\n          watch();\n\n          // On linux, the recursive `watch` command is not fully supported:\n          // https://nodejs.org/docs/latest/api/fs.html#fs_fs_watch_filename_options_listener\n          //\n          // However, the recursive option WILL watch direct children of the\n          // given directory.  So, this hack just manually sets up watches on\n          // the expected subdirs -- that is, `assets` and `tests`.\n          if (process && process.platform === 'linux') {\n            watch('assets');\n            watch('tests');\n          }\n        }\n      });\n\n      installDevtron();\n      installEmberInspector();\n    });\n  }\n\n  setupLivereload();\n});","define('pomodoro-electron/helpers/and', ['exports', 'ember', 'ember-truth-helpers/helpers/and'], function (exports, _ember, _emberTruthHelpersHelpersAnd) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersAnd.andHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersAnd.andHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/app-version', ['exports', 'ember', 'pomodoro-electron/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _ember, _pomodoroElectronConfigEnvironment, _emberCliAppVersionUtilsRegexp) {\n  exports.appVersion = appVersion;\n  var version = _pomodoroElectronConfigEnvironment['default'].APP.version;\n\n  function appVersion(_) {\n    var hash = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    if (hash.hideSha) {\n      return version.match(_emberCliAppVersionUtilsRegexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_emberCliAppVersionUtilsRegexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(appVersion);\n});","define('pomodoro-electron/helpers/eq', ['exports', 'ember', 'ember-truth-helpers/helpers/equal'], function (exports, _ember, _emberTruthHelpersHelpersEqual) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersEqual.equalHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersEqual.equalHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/gt', ['exports', 'ember', 'ember-truth-helpers/helpers/gt'], function (exports, _ember, _emberTruthHelpersHelpersGt) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersGt.gtHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersGt.gtHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/gte', ['exports', 'ember', 'ember-truth-helpers/helpers/gte'], function (exports, _ember, _emberTruthHelpersHelpersGte) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersGte.gteHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersGte.gteHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/is-array', ['exports', 'ember', 'ember-truth-helpers/helpers/is-array'], function (exports, _ember, _emberTruthHelpersHelpersIsArray) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersIsArray.isArrayHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersIsArray.isArrayHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/is-equal', ['exports', 'ember-truth-helpers/helpers/is-equal'], function (exports, _emberTruthHelpersHelpersIsEqual) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberTruthHelpersHelpersIsEqual['default'];\n    }\n  });\n  Object.defineProperty(exports, 'isEqual', {\n    enumerable: true,\n    get: function get() {\n      return _emberTruthHelpersHelpersIsEqual.isEqual;\n    }\n  });\n});","define('pomodoro-electron/helpers/lt', ['exports', 'ember', 'ember-truth-helpers/helpers/lt'], function (exports, _ember, _emberTruthHelpersHelpersLt) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersLt.ltHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersLt.ltHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/lte', ['exports', 'ember', 'ember-truth-helpers/helpers/lte'], function (exports, _ember, _emberTruthHelpersHelpersLte) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersLte.lteHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersLte.lteHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/not-eq', ['exports', 'ember', 'ember-truth-helpers/helpers/not-equal'], function (exports, _ember, _emberTruthHelpersHelpersNotEqual) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersNotEqual.notEqualHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersNotEqual.notEqualHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/not', ['exports', 'ember', 'ember-truth-helpers/helpers/not'], function (exports, _ember, _emberTruthHelpersHelpersNot) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersNot.notHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersNot.notHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/or', ['exports', 'ember', 'ember-truth-helpers/helpers/or'], function (exports, _ember, _emberTruthHelpersHelpersOr) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersOr.orHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersOr.orHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {\n  exports['default'] = _emberInflectorLibHelpersPluralize['default'];\n});","define('pomodoro-electron/helpers/pomodoro-hours', ['exports', 'ember'], function (exports, _ember) {\n  exports.pomodoroHours = pomodoroHours;\n\n  function pomodoroHours(params /*, hash*/) {\n    return params[0].length / 2 + ' h';\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(pomodoroHours);\n});","define('pomodoro-electron/helpers/route-action', ['exports', 'ember-route-action-helper/helpers/route-action'], function (exports, _emberRouteActionHelperHelpersRouteAction) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberRouteActionHelperHelpersRouteAction['default'];\n    }\n  });\n});","define('pomodoro-electron/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {\n  exports['default'] = _emberInflectorLibHelpersSingularize['default'];\n});","define('pomodoro-electron/helpers/xor', ['exports', 'ember', 'ember-truth-helpers/helpers/xor'], function (exports, _ember, _emberTruthHelpersHelpersXor) {\n\n  var forExport = null;\n\n  if (_ember['default'].Helper) {\n    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersXor.xorHelper);\n  } else if (_ember['default'].HTMLBars.makeBoundHelper) {\n    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersXor.xorHelper);\n  }\n\n  exports['default'] = forExport;\n});","define('pomodoro-electron/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'pomodoro-electron/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _pomodoroElectronConfigEnvironment) {\n  var _config$APP = _pomodoroElectronConfigEnvironment['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(name, version)\n  };\n});","define('pomodoro-electron/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('pomodoro-electron/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `data-adapter` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('pomodoro-electron/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/index'], function (exports, _emberDataSetupContainer, _emberDataIndex) {\n\n  /*\n  \n    This code initializes Ember-Data onto an Ember application.\n  \n    If an Ember.js developer defines a subclass of DS.Store on their application,\n    as `App.StoreService` (or via a module system that resolves to `service:store`)\n    this code will automatically instantiate it and make it available on the\n    router.\n  \n    Additionally, after an application's controllers have been injected, they will\n    each have the store made available to them.\n  \n    For example, imagine an Ember.js application with the following classes:\n  \n    App.StoreService = DS.Store.extend({\n      adapter: 'custom'\n    });\n  \n    App.PostsController = Ember.Controller.extend({\n      // ...\n    });\n  \n    When the application is initialized, `App.ApplicationStore` will automatically be\n    instantiated, and the instance of `App.PostsController` will have its `store`\n    property set to that instance.\n  \n    Note that this code will only be run if the `ember-application` package is\n    loaded. If Ember Data is being used in an environment other than a\n    typical application (e.g., node.js where only `ember-runtime` is available),\n    this code will be ignored.\n  */\n\n  exports['default'] = {\n    name: 'ember-data',\n    initialize: _emberDataSetupContainer['default']\n  };\n});","define('pomodoro-electron/initializers/export-application-global', ['exports', 'ember', 'pomodoro-electron/config/environment'], function (exports, _ember, _pomodoroElectronConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_pomodoroElectronConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _pomodoroElectronConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_pomodoroElectronConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('pomodoro-electron/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `injectStore` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('pomodoro-electron/initializers/store', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `store` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('pomodoro-electron/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `transforms` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('pomodoro-electron/initializers/truth-helpers', ['exports', 'ember', 'ember-truth-helpers/utils/register-helper', 'ember-truth-helpers/helpers/and', 'ember-truth-helpers/helpers/or', 'ember-truth-helpers/helpers/equal', 'ember-truth-helpers/helpers/not', 'ember-truth-helpers/helpers/is-array', 'ember-truth-helpers/helpers/not-equal', 'ember-truth-helpers/helpers/gt', 'ember-truth-helpers/helpers/gte', 'ember-truth-helpers/helpers/lt', 'ember-truth-helpers/helpers/lte'], function (exports, _ember, _emberTruthHelpersUtilsRegisterHelper, _emberTruthHelpersHelpersAnd, _emberTruthHelpersHelpersOr, _emberTruthHelpersHelpersEqual, _emberTruthHelpersHelpersNot, _emberTruthHelpersHelpersIsArray, _emberTruthHelpersHelpersNotEqual, _emberTruthHelpersHelpersGt, _emberTruthHelpersHelpersGte, _emberTruthHelpersHelpersLt, _emberTruthHelpersHelpersLte) {\n  exports.initialize = initialize;\n\n  function initialize() /* container, application */{\n\n    // Do not register helpers from Ember 1.13 onwards, starting from 1.13 they\n    // will be auto-discovered.\n    if (_ember['default'].Helper) {\n      return;\n    }\n\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('and', _emberTruthHelpersHelpersAnd.andHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('or', _emberTruthHelpersHelpersOr.orHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('eq', _emberTruthHelpersHelpersEqual.equalHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('not', _emberTruthHelpersHelpersNot.notHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('is-array', _emberTruthHelpersHelpersIsArray.isArrayHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('not-eq', _emberTruthHelpersHelpersNotEqual.notEqualHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('gt', _emberTruthHelpersHelpersGt.gtHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('gte', _emberTruthHelpersHelpersGte.gteHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('lt', _emberTruthHelpersHelpersLt.ltHelper);\n    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('lte', _emberTruthHelpersHelpersLte.lteHelper);\n  }\n\n  exports['default'] = {\n    name: 'truth-helpers',\n    initialize: initialize\n  };\n});","define(\"pomodoro-electron/instance-initializers/ember-data\", [\"exports\", \"ember-data/-private/instance-initializers/initialize-store-service\"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {\n  exports[\"default\"] = {\n    name: \"ember-data\",\n    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService[\"default\"]\n  };\n});","define('pomodoro-electron/models/color', ['exports', 'ember-data', 'ember-pouch'], function (exports, _emberData, _emberPouch) {\n  exports['default'] = _emberPouch.Model.extend({\n    name: _emberData['default'].attr('string'),\n    value: _emberData['default'].attr('string')\n  });\n});","define('pomodoro-electron/models/pomodoro', ['exports', 'ember-data', 'ember-pouch'], function (exports, _emberData, _emberPouch) {\n  exports['default'] = _emberPouch.Model.extend({\n    date: _emberData['default'].attr('date'),\n    task: _emberData['default'].belongsTo('task')\n  });\n});","define('pomodoro-electron/models/tag', ['exports', 'ember-data', 'ember-pouch'], function (exports, _emberData, _emberPouch) {\n  exports['default'] = _emberPouch.Model.extend({\n    name: _emberData['default'].attr('string'),\n    description: _emberData['default'].attr('string'),\n    color: _emberData['default'].attr('string')\n  });\n});","define('pomodoro-electron/models/task', ['exports', 'ember-data', 'ember-pouch'], function (exports, _emberData, _emberPouch) {\n  exports['default'] = _emberPouch.Model.extend({\n    name: _emberData['default'].attr('string'),\n    description: _emberData['default'].attr('string'),\n    active: _emberData['default'].attr('boolean'),\n    pomodoros: _emberData['default'].hasMany('pomodoro')\n  });\n});","define('pomodoro-electron/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('pomodoro-electron/router', ['exports', 'ember', 'pomodoro-electron/config/environment'], function (exports, _ember, _pomodoroElectronConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _pomodoroElectronConfigEnvironment['default'].locationType,\n    rootURL: _pomodoroElectronConfigEnvironment['default'].rootURL\n  });\n\n  Router.map(function () {\n    this.route('main');\n    this.route('schedule');\n    this.route('statistics');\n    this.route('configuration');\n    this.route('testing');\n  });\n\n  exports['default'] = Router;\n});","define('pomodoro-electron/routes/application', ['exports', 'ember', 'pomodoro-electron/routes/data'], function (exports, _ember, _pomodoroElectronRoutesData) {\n  exports['default'] = _ember['default'].Route.extend({\n    setupController: function setupController(controller, post) {\n      this._super(controller, post);\n      this.set('controller', controller);\n    },\n    state: { selectedTask: null,\n      selectedTag: null,\n      clock: {\n        state: 'paused',\n        mode: 'pomodoro',\n        time: 5,\n        shortInterval: 10,\n        longInterval: 15,\n        streak: 0,\n        pausedByUser: false,\n        reset: null\n      }\n    },\n\n    // seed the db\n    seed: function seed() {\n      for (var key in _pomodoroElectronRoutesData['default']) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _pomodoroElectronRoutesData['default'][key][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var value = _step.value;\n\n            console.log(key);\n            this.store.createRecord(key, value).save().then(function (val) {\n              console.log('value inserted');\n            })['catch'](function (error) {\n              console.error('\\n            error trying to seed the db!: ' + error + '\\n          ');\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    },\n    model: function model() {\n      //this.seed();\n      return _ember['default'].RSVP.hash({\n        tasks: this.store.findAll('task'),\n        tags: this.store.findAll('tag'),\n        state: this.get('state')\n      });\n    },\n    redirect: function redirect() {\n      //this.transitionTo('main');\n    },\n    actions: {\n      showSidenav: function showSidenav() {\n        this.get('controller').toggleProperty('openSidenav');\n      },\n      changeSelected: function changeSelected(item, mode) {\n        var _this = this;\n\n        if (this.get('data.state.clock.state') === 'paused') {\n          return;\n        }\n        var controller = this.get('controller');\n        controller.set('showDialog', true);\n        controller.set('popTitle', 'stop clock!');\n        controller.set('popMsg', '\\n      are you sure you wanna change the task,\\n      clock gonna be reseted\\n      ');\n        controller.set('dialogCB', function (val) {\n          if (val) {\n            _this.get('data.state.clock.reset')();\n          }\n        });\n      },\n      createTask: function createTask(task) {\n        return this.store.createRecord('task', task).save();\n      },\n      completeTask: function completeTask(task) {\n        console.log('complete task!', task.id);\n        task.set('active', false);\n        return task.save();\n      },\n      editTask: function editTask(task) {\n        return task.save();\n      },\n      createTag: function createTag(tag) {\n        return this.store.createRecord('tag', tag).save();\n      },\n      completeTag: function completeTag(tag) {\n        console.log('complete task!', tag.id);\n        tag.set('active', false);\n        return tag.save();\n      },\n      editTag: function editTag(tag) {\n        return tag.save();\n      }\n    }\n  });\n});","define('pomodoro-electron/routes/configuration', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/routes/data', ['exports'], function (exports) {\n  var data = {\n    task: [{ name: 'task 1', description: 'task 2', active: true }],\n    tag: [{ name: 'tag 1', description: 'tag 2', color: '#ff00ff' }],\n    color: [{ name: '', value: '#ff00ff' }],\n    pomodoro: [{ date: new Date(), task: 1 }]\n  };\n  exports['default'] = data;\n});","define('pomodoro-electron/routes/main', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/routes/schedule', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/routes/statistics', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/routes/testing', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define(\"pomodoro-electron/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"cSZKKv96\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"helper\\\",[\\\"pop-dialog\\\"],null,[[\\\"confirm\\\",\\\"showDialog\\\",\\\"title\\\",\\\"text\\\"],[[\\\"get\\\",[\\\"dialogCB\\\"]],[\\\"get\\\",[\\\"showDialog\\\"]],[\\\"get\\\",[\\\"popTitle\\\"]],[\\\"get\\\",[\\\"popMsg\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"sidenav-panel\\\"],null,[[\\\"createTask\\\",\\\"editTask\\\",\\\"createTag\\\",\\\"editTag\\\",\\\"openSidenav\\\",\\\"model\\\"],[[\\\"helper\\\",[\\\"route-action\\\"],[\\\"createTask\\\"],null],[\\\"helper\\\",[\\\"route-action\\\"],[\\\"editTask\\\"],null],[\\\"helper\\\",[\\\"route-action\\\"],[\\\"createTag\\\"],null],[\\\"helper\\\",[\\\"route-action\\\"],[\\\"editTag\\\"],null],[\\\"get\\\",[\\\"openSidenav\\\"]],[\\\"get\\\",[\\\"model\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"route-action\\\"],[\\\"showSidenav\\\"],null],null],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-button\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"bars\\\"],null],false],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"root-div column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-header row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-header-side row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"menu-options\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"link-to\\\"],[\\\"main\\\"],null,2],[\\\"text\\\",\\\"        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-header-main\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-header-aside row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"menu-options\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"links\\\"]]],null,1],[\\\"text\\\",\\\"      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-body row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-body-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\\n      \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"              \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[[\\\"get\\\",[\\\"item\\\",\\\"icon\\\"]]],null],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"          \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"link-to\\\"],[[\\\"get\\\",[\\\"item\\\",\\\"link\\\"]]],null,0],[\\\"text\\\",\\\"          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"item\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"            \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"home\\\"],null],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/application.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/clock-comp\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"UV7SdlW7\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"clock-comp-header column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"min\\\"]],false],[\\\"text\\\",\\\":\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"sec\\\"]],false],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"clock-comp-body column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"flip-clock-body\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"a\\\",[]],[\\\"static-attr\\\",\\\"id\\\",\\\"fc-test-startbtn\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"playPause\\\"],null],null],[\\\"static-attr\\\",\\\"href\\\",\\\"#\\\"],[\\\"static-attr\\\",\\\"title\\\",\\\"Start clock\\\"],[\\\"dynamic-attr\\\",\\\"class\\\",[\\\"concat\\\",[\\\"play-button \\\",[\\\"helper\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"active\\\"]],\\\"active\\\"],null]]]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/clock-comp.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/color-option\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"jvhfBK7k\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"id\\\",\\\"co-test-block\\\"],[\\\"dynamic-attr\\\",\\\"style\\\",[\\\"unknown\\\",[\\\"style\\\"]],null],[\\\"static-attr\\\",\\\"class\\\",\\\"color-option-block\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"p\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"color\\\",\\\"value\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/color-option.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/dropdown-list\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"4TwBp+Pe\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"clickSelected\\\"],null],null],[\\\"static-attr\\\",\\\"class\\\",\\\"dropdown-list-selected\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"yield\\\",\\\"default\\\",[[\\\"get\\\",[\\\"selectedItem\\\"]]]],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"id\\\",\\\"dl-test-list\\\"],[\\\"static-attr\\\",\\\"class\\\",\\\"dropdown-list-dropdown\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"selection\\\"]]],null,0],[\\\"text\\\",\\\"  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[\\\"default\\\"],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"selectItem\\\",[\\\"get\\\",[\\\"item\\\"]]],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"yield\\\",\\\"default\\\",[[\\\"get\\\",[\\\"item\\\"]]]],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"item\\\"]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/dropdown-list.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/flip-clock\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"OFjVe0H3\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"flip-clock-header\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"clock\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"flip-clock-body\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"a\\\",[]],[\\\"static-attr\\\",\\\"id\\\",\\\"fc-test-startbtn\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"playPause\\\"],null],null],[\\\"static-attr\\\",\\\"href\\\",\\\"#\\\"],[\\\"static-attr\\\",\\\"title\\\",\\\"Start clock\\\"],[\\\"dynamic-attr\\\",\\\"class\\\",[\\\"concat\\\",[\\\"play-button \\\",[\\\"helper\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"active\\\"]],\\\"active\\\"],null]]]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/flip-clock.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/info-card\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"QBa+APR6\", \"block\": \"{\\\"statements\\\":[[\\\"yield\\\",\\\"default\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[\\\"default\\\"],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/info-card.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/pop-dialog\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"Yp+AWiQx\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"pop-dialog-box\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"pop-dialog-header row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"title\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"icon-button\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"close\\\",false],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"close\\\"],null],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"pop-dialog-body column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"pop-dialog-body-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"p\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"text\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"pop-dialog-footer row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"icon-button\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"close\\\",true],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      Confirm\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"icon-button\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"close\\\",false],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      Cancel\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/pop-dialog.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/sidenav-list\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"RJz658+m\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-header column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-header-header row centralized\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"bars\\\"],null],false],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"listMode\\\"]],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-header-body column centralized\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"placeholder\\\",\\\"id\\\",\\\"key-up\\\",\\\"type\\\",\\\"value\\\"],[\\\"Search\\\",\\\"sl-test-search\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"searchList\\\"],null],\\\"text\\\",[\\\"get\\\",[\\\"search\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-header-footer row centralized\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-header-footer-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"showLeftPanel\\\"],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        add\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-body row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"loading\\\"]]],null,5,4],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-footer column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-footer-header\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"toggleInactive\\\"],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      Inactive\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\" \\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-list-footer-body row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"changeListMode\\\",\\\"tasks\\\"],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      Tasks\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\" \\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"changeListMode\\\",\\\"tags\\\"],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      Tags\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"no-result-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"h1\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"No Items\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"                    \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"pomodoro-hours\\\"],[[\\\"get\\\",[\\\"item\\\",\\\"pomodoros\\\"]]],null],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"          \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"row\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"toggle\\\",[\\\"get\\\",[\\\"item\\\"]]],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                  \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"item\\\",\\\"name\\\"]],false],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"item\\\",\\\"pomodoros\\\"]]],null,1],[\\\"text\\\",\\\"                \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"  \\\\n                \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"showLeftPanel\\\",[\\\"get\\\",[\\\"item\\\"]]],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                  \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"ellipsis-v\\\"],null],false],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"item\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"      \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"filteredList\\\"]]],null,2],[\\\"text\\\",\\\"      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"  \\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"filteredList\\\"]]],null,3,0]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"loading-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"i\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"fa fa-circle-o-notch fa-spin fa-4x fa-fw\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/sidenav-list.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/sidenav-panel\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"u9H8xC5L\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-panel-overlay\\\"],[\\\"static-attr\\\",\\\"id\\\",\\\"sp-test-overlaybtn\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"overlayClick\\\"],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-panel row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-panel-side column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-panel-side-header\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"showLeftPanel\\\"],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"chevron-left\\\"],null],false],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-panel-side-body row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-panel-side-body-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"helper\\\",[\\\"eq\\\"],[[\\\"get\\\",[\\\"listMode\\\"]],\\\"tasks\\\"],null]],null,2,1],[\\\"text\\\",\\\"      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-panel-aside\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"sidenav-list\\\"],null,[[\\\"changeSelected\\\",\\\"model\\\",\\\"mode\\\",\\\"register\\\",\\\"showLeftPanel\\\",\\\"listMode\\\"],[[\\\"helper\\\",[\\\"route-action\\\"],[\\\"changeSelected\\\"],null],[\\\"get\\\",[\\\"model\\\"]],[\\\"get\\\",[\\\"mode\\\"]],[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"register\\\"],null],[\\\"get\\\",[\\\"leftPanel\\\"]],[\\\"get\\\",[\\\"listMode\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"showLeftPanel\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"show\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"tag-form\\\"],null,[[\\\"title\\\",\\\"colors\\\",\\\"tag\\\",\\\"register\\\",\\\"completeTag\\\",\\\"saveTag\\\"],[\\\"Create Tag\\\",[\\\"get\\\",[\\\"model\\\",\\\"colors\\\"]],[\\\"get\\\",[\\\"mode\\\",\\\"model\\\"]],[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"register\\\"],null],[\\\"helper\\\",[\\\"route-action\\\"],[\\\"completeTag\\\"],null],[\\\"helper\\\",[\\\"route-action\\\"],[[\\\"get\\\",[\\\"mode\\\",\\\"saveAction\\\"]]],null]]]],false],[\\\"text\\\",\\\" \\\\n        \\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"block\\\",[\\\"if\\\"],[[\\\"helper\\\",[\\\"eq\\\"],[[\\\"get\\\",[\\\"listMode\\\"]],\\\"tags\\\"],null]],null,0]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"task-form\\\"],null,[[\\\"title\\\",\\\"task\\\",\\\"tags\\\",\\\"register\\\",\\\"saveTask\\\",\\\"completeTask\\\"],[\\\"Edit Task\\\",[\\\"get\\\",[\\\"mode\\\",\\\"model\\\"]],[\\\"get\\\",[\\\"model\\\",\\\"tags\\\"]],[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"register\\\"],null],[\\\"helper\\\",[\\\"route-action\\\"],[[\\\"get\\\",[\\\"mode\\\",\\\"saveAction\\\"]]],null],[\\\"helper\\\",[\\\"route-action\\\"],[\\\"completeTask\\\"],null]]]],false],[\\\"text\\\",\\\" \\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/sidenav-panel.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/tag-form\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"ILpVw82v\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tag-form-header row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"mode\\\"]],false],[\\\"text\\\",\\\" tag\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"helper\\\",[\\\"eq\\\"],[[\\\"get\\\",[\\\"mode\\\"]],\\\"edit\\\"],null]],null,4],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"msgs\\\"]]],null,3],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"value\\\"],[\\\"text\\\",[\\\"get\\\",[\\\"tag\\\",\\\"name\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"value\\\"],[\\\"text\\\",[\\\"get\\\",[\\\"tag\\\",\\\"description\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"dropdown-list\\\"],null,[[\\\"items\\\"],[[\\\"get\\\",[\\\"colors\\\"]]]],0],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"button-primary\\\"],[\\\"static-attr\\\",\\\"data-test-tag-save\\\",\\\"\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"saveTag\\\",[\\\"get\\\",[\\\"tag\\\"]]],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Save\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"  \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"color-option\\\"],null,[[\\\"color\\\"],[[\\\"get\\\",[\\\"color\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"color\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"get\\\",[\\\"msg\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"msg\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"    \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"data-test-tag-msgs\\\",\\\"\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"msgs\\\"]]],null,1],[\\\"text\\\",\\\"    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\" \\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"block\\\",[\\\"info-card\\\"],null,null,2]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"completeTag\\\",[\\\"get\\\",[\\\"tag\\\"]]],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      complete\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"  \\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/tag-form.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/task-form\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"lZTi2hHF\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"task-form-header row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"mode\\\"]],false],[\\\"text\\\",\\\" task\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"helper\\\",[\\\"eq\\\"],[[\\\"get\\\",[\\\"mode\\\"]],\\\"edit\\\"],null]],null,4],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"msgs\\\"]]],null,3],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"value\\\"],[\\\"text\\\",[\\\"get\\\",[\\\"task\\\",\\\"name\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"value\\\"],[\\\"text\\\",[\\\"get\\\",[\\\"task\\\",\\\"description\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"dropdown-list\\\"],null,[[\\\"selected\\\",\\\"items\\\"],[[\\\"get\\\",[\\\"task\\\",\\\"tag\\\"]],[\\\"get\\\",[\\\"tags\\\"]]]],0],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"button-primary\\\"],[\\\"static-attr\\\",\\\"id\\\",\\\"taf-test-saveButton\\\"],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"saveTask\\\",[\\\"get\\\",[\\\"task\\\"]]],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Save\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"  \\\"],[\\\"open-element\\\",\\\"p\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"tag\\\",\\\"name\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"tag\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"get\\\",[\\\"msg\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"msg\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"    \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"id\\\",\\\"taf-test-msgs\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"msgs\\\"]]],null,1],[\\\"text\\\",\\\"    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\" \\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"block\\\",[\\\"info-card\\\"],null,null,2]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"completeTask\\\",[\\\"get\\\",[\\\"task\\\"]]],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      complete\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"  \\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/task-form.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/task-info\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"NbZSZ6x1\", \"block\": \"{\\\"statements\\\":[[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"state\\\",\\\"selectedTask\\\"]]],null,1,0]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"  \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Select a task first\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"  \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"state\\\",\\\"selectedTask\\\",\\\"name\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/task-info.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/tasks-sidenav\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"Q6cbmFgB\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-header column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-header-header row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"bars\\\"],null],false],[\\\"text\\\",\\\"\\\\n      Tasks\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-header-body column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"placeholder\\\",\\\"type\\\",\\\"value\\\"],[\\\"Search\\\",\\\"text\\\",[\\\"get\\\",[\\\"search\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-body\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"loading\\\"]]],null,4,3],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-footer\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sidenav-footer-opts-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"showCreateTask\\\"],null],null],[\\\"static-attr\\\",\\\"class\\\",\\\"add-task-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"plus\\\"],null],false],[\\\"text\\\",\\\"\\\\n      Task\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"showCreateTag\\\"],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"plus\\\"],null],false],[\\\"text\\\",\\\"\\\\n      Tag\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"      \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"no-result-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"h1\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"No Tasks\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"          \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"toggle\\\",[\\\"get\\\",[\\\"task\\\"]]],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"task-name\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"task\\\",\\\"name\\\"]],false],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"pomodoro-time\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"pomodoro-hours\\\"],[[\\\"get\\\",[\\\"task\\\",\\\"pomodoros\\\"]]],null],false],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"showEditTask\\\",[\\\"get\\\",[\\\"task\\\"]]],null],null],[\\\"static-attr\\\",\\\"class\\\",\\\"opt-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n                \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"ellipsis-v\\\"],null],false],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"task\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"      \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"filteredTasks\\\"]]],null,1],[\\\"text\\\",\\\"      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"  \\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"block\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"filteredTasks\\\"]]],null,2,0]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"loading-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"i\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"fa fa-circle-o-notch fa-spin fa-4x fa-fw\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/tasks-sidenav.hbs\" } });\n});","define(\"pomodoro-electron/templates/configuration\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"eIiVqaSK\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/configuration.hbs\" } });\n});","define(\"pomodoro-electron/templates/main\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"ClcYFKNO\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"main-container column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"main-header\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"task-info\\\"],null,[[\\\"state\\\"],[[\\\"get\\\",[\\\"model\\\",\\\"state\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"main-body\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"clock-comp\\\"],null,[[\\\"clock\\\",\\\"playPause\\\",\\\"stopCB\\\"],[[\\\"get\\\",[\\\"model\\\",\\\"state\\\",\\\"clock\\\"]],[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"playPause\\\"],null],[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"stopClock\\\"],null]]]],false],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/main.hbs\" } });\n});","define(\"pomodoro-electron/templates/schedule\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"VBYx0O08\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/schedule.hbs\" } });\n});","define(\"pomodoro-electron/templates/statistics\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"Uhn7Yd4z\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/statistics.hbs\" } });\n});","define(\"pomodoro-electron/templates/testing\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"R62KdK3q\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"style\\\",\\\"float: right;\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  show\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/testing.hbs\" } });\n});","define('pomodoro-electron/transforms/attachment', ['exports', 'ember-pouch/transforms/attachment'], function (exports, _emberPouchTransformsAttachment) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberPouchTransformsAttachment['default'];\n    }\n  });\n});","define('pomodoro-electron/transforms/attachments', ['exports', 'ember-pouch/transforms/attachments'], function (exports, _emberPouchTransformsAttachments) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberPouchTransformsAttachments['default'];\n    }\n  });\n});","\n","define('pomodoro-electron/config/environment', ['ember'], function(Ember) {\n  var prefix = 'pomodoro-electron';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"pomodoro-electron/app\")[\"default\"].create({\"name\":\"pomodoro-electron\",\"version\":\"0.0.0+4098c4ac\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfjBA;AACA;AACA;","file":"pomodoro-electron.js"}