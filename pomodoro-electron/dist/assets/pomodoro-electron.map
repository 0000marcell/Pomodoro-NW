{"version":3,"sources":["vendor/ember-cli/app-prefix.js","pomodoro-electron/app.js","pomodoro-electron/components/fa-icon.js","pomodoro-electron/components/fa-list.js","pomodoro-electron/components/fa-stack.js","pomodoro-electron/components/flip-clock.js","pomodoro-electron/components/tasks-sidenav.js","pomodoro-electron/controllers/application.js","pomodoro-electron/controllers/main.js","pomodoro-electron/electron/reload.js","pomodoro-electron/helpers/app-version.js","pomodoro-electron/helpers/pluralize.js","pomodoro-electron/helpers/pomodoro-hours.js","pomodoro-electron/helpers/singularize.js","pomodoro-electron/initializers/app-version.js","pomodoro-electron/initializers/container-debug-adapter.js","pomodoro-electron/initializers/data-adapter.js","pomodoro-electron/initializers/ember-data.js","pomodoro-electron/initializers/export-application-global.js","pomodoro-electron/initializers/injectStore.js","pomodoro-electron/initializers/store.js","pomodoro-electron/initializers/transforms.js","pomodoro-electron/instance-initializers/ember-data.js","pomodoro-electron/resolver.js","pomodoro-electron/router.js","pomodoro-electron/routes/application.js","pomodoro-electron/routes/configuration.js","pomodoro-electron/routes/data.js","pomodoro-electron/routes/main.js","pomodoro-electron/routes/schedule.js","pomodoro-electron/routes/statistics.js","pomodoro-electron/services/ajax.js","pomodoro-electron/templates/application.js","pomodoro-electron/templates/components/flip-clock.js","pomodoro-electron/templates/components/tasks-sidenav.js","pomodoro-electron/templates/configuration.js","pomodoro-electron/templates/main.js","pomodoro-electron/templates/schedule.js","pomodoro-electron/templates/statistics.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('pomodoro-electron/app', ['exports', 'ember', 'pomodoro-electron/resolver', 'ember-load-initializers', 'pomodoro-electron/config/environment'], function (exports, _ember, _pomodoroElectronResolver, _emberLoadInitializers, _pomodoroElectronConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _pomodoroElectronConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _pomodoroElectronConfigEnvironment['default'].podModulePrefix,\n    Resolver: _pomodoroElectronResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _pomodoroElectronConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('pomodoro-electron/components/fa-icon', ['exports', 'ember-font-awesome/components/fa-icon'], function (exports, _emberFontAwesomeComponentsFaIcon) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaIcon['default'];\n    }\n  });\n});","define('pomodoro-electron/components/fa-list', ['exports', 'ember-font-awesome/components/fa-list'], function (exports, _emberFontAwesomeComponentsFaList) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaList['default'];\n    }\n  });\n});","define('pomodoro-electron/components/fa-stack', ['exports', 'ember-font-awesome/components/fa-stack'], function (exports, _emberFontAwesomeComponentsFaStack) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaStack['default'];\n    }\n  });\n});","define('pomodoro-electron/components/flip-clock', ['exports', 'ember'], function (exports, _ember) {\n\n  var pomodoroTime = 5,\n      longIntervalTime = 10,\n      shortIntervalTime = 5;\n\n  exports['default'] = _ember['default'].Component.extend({\n    previousState: false,\n    didInsertElement: function didInsertElement() {\n      var flipClock = _ember['default'].$('.clock').FlipClock({\n        clockFace: 'MinuteCounter',\n        autoStart: false,\n        callbacks: {\n          stop: this.stopClock.bind(this)\n        }\n      });\n      this.set('flipClock', flipClock);\n      this.initialize();\n    },\n    initialize: function initialize() {\n      this.get('flipClock').setCountdown(true);\n      this.get('flipClock').setTime(pomodoroTime);\n    },\n    reset: function reset(sec) {\n      this.get('flipClock').setTime(sec);\n    },\n    pause: function pause() {\n      this.set('clock.state', 'paused');\n      this.get('flipClock').stop();\n    },\n    start: function start() {\n      this.set('clock.state', 'active');\n      this.get('flipClock').start();\n    },\n    stopClock: function stopClock() {\n      var _this = this;\n\n      _ember['default'].run.later(this, function () {\n        if (_this.get('clock.state') === 'paused') {\n          return;\n        }\n        if (_this.get('clock.mode') === 'pomodoro') {\n          _this.incrementProperty('intervalCount');\n          var interval = _this.get('intervalCount') % 3 === 0 ? longIntervalTime : shortIntervalTime;\n          _this.get('flipClock').setTime(interval);\n          _this.set('clock.mode', 'interval');\n        } else if (_this.get('clock.mode') === 'interval') {\n          _this.get('flipClock').setTime(pomodoroTime);\n          _this.set('clock.mode', 'pomodoro');\n        }\n        _ember['default'].run.later(_this, function () {\n          _this.start();\n        }, 1000);\n      }, 1000);\n    },\n    actions: {\n      playPause: function playPause() {\n        this.get('active') ? this.pause() : this.start();\n        this.toggleProperty('active');\n      }\n    }\n  });\n});","define('pomodoro-electron/components/tasks-sidenav', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n    classNameBindings: ['openSidenav'],\n    actions: {\n      overlayClick: function overlayClick() {\n        this.toggleProperty('openSidenav');\n      },\n      toggle: function toggle(event) {\n        event.target.classList.add('active');\n        if (this.get('prevItem')) {\n          this.get('prevItem').classList.remove('active');\n        }\n        this.set('prevItem', event.target);\n      }\n    }\n  });\n});","define('pomodoro-electron/controllers/application', ['exports', 'ember', 'd3-selection', 'd3-scale'], function (exports, _ember, _d3Selection, _d3Scale) {\n\n  var links = [{ icon: 'clock-o', name: 'schedule', link: 'schedule' }, { icon: 'bar-chart', name: 'statistics', link: 'statistics' }, { icon: 'cog', name: 'configuration', link: 'configuration' }];\n\n  exports['default'] = _ember['default'].Controller.extend({\n    openSidenav: true,\n    links: links,\n    clock: {\n      state: 'paused',\n      mode: 'pomodoro'\n    },\n    savePomodoro: _ember['default'].computed('clock', function () {\n      if (this.get('clock.mode') === 'interval') {\n        alert('save pomodoro!');\n      }\n    }),\n    actions: {\n      showSidenav: function showSidenav() {\n        this.toggleProperty('openSidenav');\n      },\n      graphIt: function graphIt() {\n        var dataArray = [20, 40, 50];\n        var colors = ['#E91E63', '#9C27B0', '#673AB7'];\n        var width = 500;\n        var height = 500;\n        var canvas = (0, _d3Selection.select)(\".graph\").append(\"svg\").attr('width', 500).attr('height', 500).attr(\"fill\", '#ff00ff');\n        var widthScale = (0, _d3Scale.scaleLinear)().domain([0, 60]).range([0, width]);\n        var bars = canvas.selectAll(\"rect\").data(dataArray).enter().append(\"rect\").attr(\"width\", function (d) {\n          return widthScale(d);\n        }).attr(\"height\", 50).attr(\"fill\", function (d, i) {\n          return colors[i];\n        }).attr(\"y\", function (d, i) {\n          return i * 60;\n        });\n      }\n    }\n  });\n});","define('pomodoro-electron/controllers/main', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n    clock: {\n      state: 'paused',\n      mode: 'pomodoro'\n    }\n  });\n});","define('pomodoro-electron/electron/reload', ['exports'], function (exports) {\n  function setupLivereload() {\n    var process = window ? window.process : null;\n\n    // Exit immediately if we're not running in Electron\n    if (!window.ELECTRON || process && process.env && process.env.DO_NOT_SETUP_LIVERELOAD) {\n      return;\n    }\n\n    // Reload the page when anything in `dist` changes\n    var fs = undefined;\n    var path = undefined;\n    var devtron = undefined;\n\n    try {\n      fs = window.requireNode('fs');\n      path = window.requireNode('path');\n    } catch (e) {\n      console.warn('ember-electron tried to require fs and path to enable live-reload features, but failed.');\n      console.warn('Automatic reloading is therefore disabled.');\n      console.warn(e);\n\n      return;\n    }\n\n    /**\n     * @private\n     * Watch a given directory for changes and reload\n     * on change\n     *\n     * @param sub directory\n     */\n    function watch() {\n      var _path;\n\n      for (var _len = arguments.length, sub = Array(_len), _key = 0; _key < _len; _key++) {\n        sub[_key] = arguments[_key];\n      }\n\n      var dirname = (_path = path).join.apply(_path, [__dirname].concat(sub));\n\n      fs.watch(dirname, { recursive: true }, function () {\n        return window.location.reload();\n      });\n    }\n\n    /**\n     * @private\n     * Install Devtron in the current window.\n     */\n    function installDevtron() {\n      try {\n        devtron = window.requireNode('devtron');\n\n        if (devtron) {\n          devtron.install();\n        }\n      } catch (e) {\n        // no-op\n      }\n    }\n\n    /**\n     * @private\n     * Install Ember-Inspector in the current window.\n     */\n    function installEmberInspector() {\n      var location = undefined;\n\n      try {\n        var eiLocation = window.requireNode.resolve('ember-inspector');\n        location = path.join(eiLocation, 'dist', 'chrome');\n      } catch (error) {\n        location = path.join(__dirname, '..', 'node_modules', 'ember-inspector', 'dist', 'chrome');\n      }\n\n      fs.lstat(location, function (err, results) {\n        if (err) {\n          console.warn('Error loading Ember Inspector', err);\n\n          return;\n        }\n\n        if (results && results.isDirectory && results.isDirectory()) {\n          var BrowserWindow = window.requireNode('electron').remote.BrowserWindow;\n\n          var added = BrowserWindow.getDevToolsExtensions && BrowserWindow.getDevToolsExtensions().hasOwnProperty('Ember Inspector');\n\n          try {\n            if (!added) {\n              BrowserWindow.addDevToolsExtension(location);\n            }\n          } catch (err) {\n            // no-op\n          }\n        }\n      });\n    }\n\n    document.addEventListener('DOMContentLoaded', function () /* e */{\n      var dirname = __dirname || (process && (process || {}).cwd ? process.cwd() : null);\n\n      if (!dirname) {\n        return;\n      }\n\n      fs.stat(dirname, function (err /* , stat */) {\n        if (!err) {\n          watch();\n\n          // On linux, the recursive `watch` command is not fully supported:\n          // https://nodejs.org/docs/latest/api/fs.html#fs_fs_watch_filename_options_listener\n          //\n          // However, the recursive option WILL watch direct children of the\n          // given directory.  So, this hack just manually sets up watches on\n          // the expected subdirs -- that is, `assets` and `tests`.\n          if (process && process.platform === 'linux') {\n            watch('assets');\n            watch('tests');\n          }\n        }\n      });\n\n      installDevtron();\n      installEmberInspector();\n    });\n  }\n\n  setupLivereload();\n});","define('pomodoro-electron/helpers/app-version', ['exports', 'ember', 'pomodoro-electron/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _ember, _pomodoroElectronConfigEnvironment, _emberCliAppVersionUtilsRegexp) {\n  exports.appVersion = appVersion;\n  var version = _pomodoroElectronConfigEnvironment['default'].APP.version;\n\n  function appVersion(_) {\n    var hash = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    if (hash.hideSha) {\n      return version.match(_emberCliAppVersionUtilsRegexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_emberCliAppVersionUtilsRegexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(appVersion);\n});","define('pomodoro-electron/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {\n  exports['default'] = _emberInflectorLibHelpersPluralize['default'];\n});","define('pomodoro-electron/helpers/pomodoro-hours', ['exports', 'ember'], function (exports, _ember) {\n  exports.pomodoroHours = pomodoroHours;\n\n  function pomodoroHours(params /*, hash*/) {\n    return params[0].length / 2 + ' h';\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(pomodoroHours);\n});","define('pomodoro-electron/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {\n  exports['default'] = _emberInflectorLibHelpersSingularize['default'];\n});","define('pomodoro-electron/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'pomodoro-electron/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _pomodoroElectronConfigEnvironment) {\n  var _config$APP = _pomodoroElectronConfigEnvironment['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(name, version)\n  };\n});","define('pomodoro-electron/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('pomodoro-electron/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `data-adapter` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('pomodoro-electron/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/index'], function (exports, _emberDataSetupContainer, _emberDataIndex) {\n\n  /*\n  \n    This code initializes Ember-Data onto an Ember application.\n  \n    If an Ember.js developer defines a subclass of DS.Store on their application,\n    as `App.StoreService` (or via a module system that resolves to `service:store`)\n    this code will automatically instantiate it and make it available on the\n    router.\n  \n    Additionally, after an application's controllers have been injected, they will\n    each have the store made available to them.\n  \n    For example, imagine an Ember.js application with the following classes:\n  \n    App.StoreService = DS.Store.extend({\n      adapter: 'custom'\n    });\n  \n    App.PostsController = Ember.Controller.extend({\n      // ...\n    });\n  \n    When the application is initialized, `App.ApplicationStore` will automatically be\n    instantiated, and the instance of `App.PostsController` will have its `store`\n    property set to that instance.\n  \n    Note that this code will only be run if the `ember-application` package is\n    loaded. If Ember Data is being used in an environment other than a\n    typical application (e.g., node.js where only `ember-runtime` is available),\n    this code will be ignored.\n  */\n\n  exports['default'] = {\n    name: 'ember-data',\n    initialize: _emberDataSetupContainer['default']\n  };\n});","define('pomodoro-electron/initializers/export-application-global', ['exports', 'ember', 'pomodoro-electron/config/environment'], function (exports, _ember, _pomodoroElectronConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_pomodoroElectronConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _pomodoroElectronConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_pomodoroElectronConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('pomodoro-electron/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `injectStore` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('pomodoro-electron/initializers/store', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `store` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('pomodoro-electron/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `transforms` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"pomodoro-electron/instance-initializers/ember-data\", [\"exports\", \"ember-data/-private/instance-initializers/initialize-store-service\"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {\n  exports[\"default\"] = {\n    name: \"ember-data\",\n    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService[\"default\"]\n  };\n});","define('pomodoro-electron/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('pomodoro-electron/router', ['exports', 'ember', 'pomodoro-electron/config/environment'], function (exports, _ember, _pomodoroElectronConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _pomodoroElectronConfigEnvironment['default'].locationType,\n    rootURL: _pomodoroElectronConfigEnvironment['default'].rootURL\n  });\n\n  Router.map(function () {\n    this.route('main');\n    this.route('schedule');\n    this.route('statistics');\n    this.route('configuration');\n  });\n\n  exports['default'] = Router;\n});","define('pomodoro-electron/routes/application', ['exports', 'ember', 'pomodoro-electron/routes/data'], function (exports, _ember, _pomodoroElectronRoutesData) {\n  exports['default'] = _ember['default'].Route.extend({\n    model: function model() {\n      return _pomodoroElectronRoutesData['default'];\n    },\n    redirect: function redirect() {\n      this.transitionTo('main');\n    }\n  });\n});","define('pomodoro-electron/routes/configuration', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/routes/data', ['exports'], function (exports) {\n  function createTasks() {\n    var obj = { tasks: [] };\n    for (var i = 1; i < 6; i++) {\n      obj.tasks.push({ id: i + '', name: 'Task ' + i,\n        pomodoros: [] });\n      for (var j = 1; j < 6; j++) {\n        obj.tasks[i - 1].pomodoros.push({ date: new Date() });\n      }\n    }\n    return obj;\n  }\n\n  exports['default'] = createTasks();\n});","define('pomodoro-electron/routes/main', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/routes/schedule', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/routes/statistics', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({});\n});","define('pomodoro-electron/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define(\"pomodoro-electron/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"oca62Izk\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"helper\\\",[\\\"tasks-sidenav\\\"],null,[[\\\"openSidenav\\\",\\\"tasks\\\"],[[\\\"get\\\",[\\\"openSidenav\\\"]],[\\\"get\\\",[\\\"model\\\",\\\"tasks\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-button\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"showSidenav\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"bars\\\"],null],false],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"root-div column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-header row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-header-side row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"menu-options\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"link-to\\\"],[\\\"main\\\"],null,2],[\\\"text\\\",\\\"        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-header-main\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-header-aside row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"menu-options\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"links\\\"]]],null,1],[\\\"text\\\",\\\"      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-body row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"app-body-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"              \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[[\\\"get\\\",[\\\"item\\\",\\\"icon\\\"]]],null],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"          \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"link-to\\\"],[[\\\"get\\\",[\\\"item\\\",\\\"link\\\"]]],null,0],[\\\"text\\\",\\\"          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"item\\\"]},{\\\"statements\\\":[[\\\"text\\\",\\\"            \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"home\\\"],null],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/application.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/flip-clock\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"MVGhIql3\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"clock\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"a\\\",[]],[\\\"static-attr\\\",\\\"href\\\",\\\"#\\\"],[\\\"static-attr\\\",\\\"title\\\",\\\"Play video\\\"],[\\\"dynamic-attr\\\",\\\"class\\\",[\\\"concat\\\",[\\\"play-button \\\",[\\\"helper\\\",[\\\"if\\\"],[[\\\"get\\\",[\\\"active\\\"]],\\\"active\\\"],null]]]],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"playPause\\\"]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/flip-clock.hbs\" } });\n});","define(\"pomodoro-electron/templates/components/tasks-sidenav\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"q85HkIae\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-overlay\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"overlayClick\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-header column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-header-header row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"h3\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"bars\\\"],null],false],[\\\"text\\\",\\\"\\\\n        Tasks\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-header-body row\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"placeholder\\\",\\\"type\\\",\\\"value\\\"],[\\\"Search\\\",\\\"text\\\",[\\\"get\\\",[\\\"search\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-body\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"ul\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"tasks\\\"]]],null,0],[\\\"text\\\",\\\"    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"tasks-sidenav-footer\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"li\\\",[]],[\\\"dynamic-attr\\\",\\\"onclick\\\",[\\\"helper\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"toggle\\\"],null],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"task-name\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"task\\\",\\\"name\\\"]],false],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"pomodoro-time\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"pomodoro-hours\\\"],[[\\\"get\\\",[\\\"task\\\",\\\"pomodoros\\\"]]],null],false],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"opt-container\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n              \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"ellipsis-v\\\"],null],false],[\\\"text\\\",\\\"\\\\n            \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"task\\\"]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/components/tasks-sidenav.hbs\" } });\n});","define(\"pomodoro-electron/templates/configuration\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"eIiVqaSK\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/configuration.hbs\" } });\n});","define(\"pomodoro-electron/templates/main\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"YHS3EPId\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"main-container column\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"comment\\\",\\\"\\\\n  <div class=\\\\\\\"main-header\\\\\\\">\\\\n    {{input type='text' value=search}}\\\\n    <ul>\\\\n{{#each model.tasks as |task|}}\\\\n        <li>\\\\n          <span>\\\\n            {{task.name}}\\\\n          </span>\\\\n        </li>\\\\n      {{/each}}    </ul>\\\\n  </div>\\\\n  \\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"main-body\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"comment\\\",\\\"\\\\n    state: {{clock.state}}\\\\n    mode: {{clock.mode}}\\\\n    {{flip-clock clock=clock}}\\\\n    \\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/main.hbs\" } });\n});","define(\"pomodoro-electron/templates/schedule\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"VBYx0O08\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/schedule.hbs\" } });\n});","define(\"pomodoro-electron/templates/statistics\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"Uhn7Yd4z\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"pomodoro-electron/templates/statistics.hbs\" } });\n});","\n","define('pomodoro-electron/config/environment', ['ember'], function(Ember) {\n  var prefix = 'pomodoro-electron';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"pomodoro-electron/app\")[\"default\"].create({\"name\":\"pomodoro-electron\",\"version\":\"0.0.0+19a5f993\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACphIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;;ACJA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"pomodoro-electron.js"}